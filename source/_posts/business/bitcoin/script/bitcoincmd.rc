alias bitcoind="bitcoind -rpcuser=ubuntu -rpcpassword=ubuntu -txindex"

alias bitcoin-cli="bitcoin-cli -rpcuser=ubuntu -rpcpassword=ubuntu"

# 出块
bg() {bitcoin-cli generate $1}

# 区块链信息
bchain() {bitcoin-cli getblockchaininfo}

# 网络信息
bnetwork() {bitcoin-cli getnetworkinfo}

# 钱包信息
bwallet() {bitcoin-cli getwalletinfo}

# 高度 -> 区块信息
bblock() {HASH=`bitcoin-cli getblockhash $1` && bitcoin-cli getblock $HASH}

# txraw -> decode 
_btxdecode () {bitcoin-cli decoderawtransaction $1} 

# 交易hash -> txraw -> decode
_btxhashdecode() {_btxdecode `bitcoin-cli getrawtransaction $1`}

# 高度 -> coinbase hash
_bbasehash() {bblock $1 | python -c 'import json,sys;obj=json.load(sys.stdin);print (obj["tx"][0])'}

# 高度 -> coinbase hash -> txraw -> decode
bbasetx() {_btxhashdecode `_bbasehash $1`}

# 高度 -> coinbase hash -> tx
bbasetxx() {bitcoin-cli gettransaction `_bbasehash $1`}

# 高度, txidx -> tx hash
_bhtxhash() {bblock $1 | python -c 'import json,sys;obj=json.load(sys.stdin);print (obj["tx"]['$2'])'; }

# 高度, txidx -> tx hash -> txraw -> decode
bhtx() {_btxhashdecode `_bhtxhash $1 $2`}

# 获取余额
bbalance() {bitcoin-cli getbalance}

# 获取地址 (P2PKH)
bnewaddr() {bitcoin-cli getnewaddress "" legacy}

# 获取地址 (P2SH)
bnewaddrp2SH() {bitcoin-cli getnewaddress}

# 发送余额  
bsendaddress() {bitcoin-cli sendtoaddress $1 $2}

# 获得utxo
blistunspent() {bitcoin-cli listunspent $1}

# 创建裸交易
bcrerawtx() {bitcoin-cli createrawtransaction $1 $2} 

# 签名交易
bsignrawtx() {bitcoin-cli signrawtransaction $1 $2 $3}

# 发送裸交易
bsendrawtx() {bitcoin-cli sendrawtransaction $1}

# 获取私钥
bdumpprikey() {bitcoin-cli dumpprivkey $1}

# 获得裸交易池
brawmem() {bitcoin-cli getrawmempool}

# 获得地址的详细信息
baddressinfo() {bitcoin-cli getaddressinfo $1}

# 创建多重签名
baddmulsig() {bitcoin-cli addmultisigaddress $1 $2}

# 解析赎回脚本
_bdecodescript() {bitcoin-cli decodescript $1}

# 列高度low & high -> blockhash
blistblock() {
    for i in `seq $1 $2`; do
        hash=`bblock $i | python -c 'import json,sys;obj=json.load(sys.stdin);print (obj["hash"])'`
        print $i $hash
    done
}